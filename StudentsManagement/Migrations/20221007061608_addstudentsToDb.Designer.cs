// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentsManagement.Data;

namespace StudentsManagement.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221007061608_addstudentsToDb")]
    partial class addstudentsToDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StudentsManagement.Models.Students", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AadhaarNumber")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RegisterNumber")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Standard")
                        .HasColumnType("int");

                    b.Property<int?>("StudentsPersonalDetailsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentsPersonalDetailsId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("StudentsManagement.Models.StudentsAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pincode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StudentsAddress");
                });

            modelBuilder.Entity("StudentsManagement.Models.StudentsPersonalDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<int?>("StudentsAddressId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentsAddressId");

                    b.ToTable("StudentsPersonalDetails");
                });

            modelBuilder.Entity("StudentsManagement.Models.Students", b =>
                {
                    b.HasOne("StudentsManagement.Models.StudentsPersonalDetails", "StudentsPersonalDetails")
                        .WithMany()
                        .HasForeignKey("StudentsPersonalDetailsId");
                });

            modelBuilder.Entity("StudentsManagement.Models.StudentsPersonalDetails", b =>
                {
                    b.HasOne("StudentsManagement.Models.StudentsAddress", "StudentsAddress")
                        .WithMany()
                        .HasForeignKey("StudentsAddressId");
                });
#pragma warning restore 612, 618
        }
    }
}
